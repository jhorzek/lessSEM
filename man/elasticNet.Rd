% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/elasticNet.R
\name{elasticNet}
\alias{elasticNet}
\title{elasticNet}
\usage{
elasticNet(
  lavaanModel,
  weights,
  lambdas = NULL,
  nLambdas = NULL,
  alphas,
  method = "ista",
  control = controlIsta()
)
}
\arguments{
\item{lavaanModel}{model of class lavaan}

\item{weights}{labeled vector with weights for each of the parameters in the
model. If you are unsure what these parameters are called, use
getLavaanParameters(model) with your lavaan model object}

\item{lambdas}{numeric vector: values for the tuning parameter lambda}

\item{nLambdas}{alternative to lambda: If alpha = 1, lessSEM can automatically
compute the first lambda value which sets all regularized parameters to zero.
It will then generate nLambda values between 0 and the computed lambda.}

\item{alphas}{numeric vector with values of the tuning parameter alpha. Must be
in \link{0,1}. 0 = ridge, 1 = lasso.}

\item{method}{which optimizer should be used? Currently implemented are ista
and glmnet. With ista, the control argument can be used to switch to related procedures
(currently gist).}

\item{control}{used to control the optimizer. This element is generated with
the controlIsta() and controlGlmnet() functions.}
}
\description{
This function allows for regularization of models built in lavaan with the
elastic net penalty. Its elements can be accessed
with the "@" operator (see examples).
}
\details{
For more details, see:
\enumerate{
\item Zou, H., & Hastie, T. (2005). Regularization and variable selection via
the elastic net. Journal of the Royal Statistical Society:
Series B, 67(2), 301–320. https://doi.org/10.1111/j.1467-9868.2005.00503.x
for the details of this regularization technique.
\item Jacobucci, R., Grimm, K. J., & McArdle, J. J. (2016).
Regularized Structural Equation Modeling. Structural Equation Modeling:
A Multidisciplinary Journal, 23(4), 555–566. https://doi.org/10.1080/10705511.2016.1154793
\item Huang, P.-H., Chen, H., & Weng, L.-J. (2017). A Penalized Likelihood
Method for Structural Equation Modeling. Psychometrika, 82(2),
329–354. https://doi.org/10.1007/s11336-017-9566-9
}
}
\examples{
library(lessSEM)

# Identical to regsem, lessSEM builds on the lavaan
# package for model specification. The first step
# therefore is to implement the model in lavaan.

dataset <- simulateExampleData()

lavaanSyntax <- "
f =~ l1*y1 + l2*y2 + l3*y3 + l4*y4 + l5*y5 + 
     l6*y6 + l7*y7 + l8*y8 + l9*y9 + l10*y10 + 
     l11*y11 + l12*y12 + l13*y13 + l14*y14 + l15*y15
f ~~ 1*f
"

lavaanModel <- lavaan::sem(lavaanSyntax,
                           data = dataset,
                           meanstructure = TRUE,
                           std.lv = TRUE)

# Optional: Plot the model
# semPlot::semPaths(lavaanModel, 
#                   what = "est",
#                   fade = FALSE)

# The implementation of elastic net is relatively flexible and also
# encompasses lasso, adaptive lasso, and ridge regularization.
# The function call is therefore slightly more complicated. If you 
# are only looking for lasso, adaptive lasso or ridge, there are 
# dedicated functions for that (see ?lasso, ?adaptiveLasso, ?ridge)

# elasticNet expects weights for each parameter. This way, we can
# decide which parameters are regularized (all parameters with weight = 0
# remain unregularized)
# names of the regularized parameters:
regularized = paste0("l", 6:15)
weights <- getLavaanParameters(lavaanModel)
weights[!names(weights) \%in\% regularized] <- 0

regsem <- elasticNet(
  # pass the fitted lavaan model
  lavaanModel = lavaanModel,
  weights = weights, 
  lambdas = seq(0,1,length.out = 20),
  alpha = seq(0,1,length.out = 5))

# elements of regsem can be accessed with the @ operator:
regsem@parameters[1,]

# use cross-validation to find the best parameters
cv <- cv4elasticNet(
  regularizedSEM = regsem, 
  k = 5
)
cv

#### Advanced ###
# Switching the optimizer # 
# Use the "method" argument to switch the optimizer. The control argument
# must also be changed to the corresponding function:
regsemGlmnet <- elasticNet(
  # pass the fitted lavaan model
  lavaanModel = lavaanModel,
  weights = weights, 
  lambdas = seq(0,1,length.out = 20),
  alpha = seq(0,1,length.out = 5),
  method = "glmnet",
  control = controlGlmnet())

# Note: The results are basically identical:
regsemGlmnet@parameters - regsem@parameters 
}
