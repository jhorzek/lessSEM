% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/elasticNet.R
\name{adaptiveLasso}
\alias{adaptiveLasso}
\title{adaptiveLasso}
\usage{
adaptiveLasso(
  lavaanModel,
  regularized,
  weights = NULL,
  lambdas = NULL,
  nLambdas = NULL,
  method = "ista",
  modifyModel = lessSEM::modifyModel(),
  control = lessSEM::controlIsta()
)
}
\arguments{
\item{lavaanModel}{model of class lavaan}

\item{regularized}{vector with names of parameters which are to be regularized.
If you are unsure what these parameters are called, use
getLavaanParameters(model) with your lavaan model object}

\item{weights}{labeled vector with weights for each of the parameters in the
model. If you are unsure what these parameters are called, use
getLavaanParameters(model) with your lavaan model object. If set to NULL,
the default weights will be used: the inverse of the absolute values of
the unregularized parameter estimates}

\item{lambdas}{numeric vector: values for the tuning parameter lambda}

\item{nLambdas}{alternative to lambda: If alpha = 1, lessSEM can automatically
compute the first lambda value which sets all regularized parameters to zero.
It will then generate nLambda values between 0 and the computed lambda.}

\item{method}{which optimizer should be used? Currently implemented are ista
and glmnet. With ista, the control argument can be used to switch to related procedures
(currently gist).}

\item{modifyModel}{used to modify the lavaanModel. See ?modifyModel.}

\item{control}{used to control the optimizer. This element is generated with
the controlIsta and controlGlmnet functions. See ?controlIsta and ?controlGlmnet
for more details.}
}
\description{
This function allows for regularization of models built in lavaan with the
adaptive lasso penalty. The returned object is an S4 class; its elements can be accessed
with the "@" operator (see examples).
}
\details{
For more details, see:
\enumerate{
\item Zou, H. (2006). The Adaptive Lasso and Its Oracle Properties.
Journal of the American Statistical Association, 101(476), 1418–1429.
https://doi.org/10.1198/016214506000000735
\item Jacobucci, R., Grimm, K. J., & McArdle, J. J. (2016).
Regularized Structural Equation Modeling. Structural Equation Modeling:
A Multidisciplinary Journal, 23(4), 555–566. https://doi.org/10.1080/10705511.2016.1154793
\item Huang, P.-H., Chen, H., & Weng, L.-J. (2017). A Penalized Likelihood
Method for Structural Equation Modeling. Psychometrika, 82(2),
329–354. https://doi.org/10.1007/s11336-017-9566-9
}
}
\examples{
library(lessSEM)

# Identical to regsem, lessSEM builds on the lavaan
# package for model specification. The first step
# therefore is to implement the model in lavaan.

dataset <- simulateExampleData()

lavaanSyntax <- "
f =~ l1*y1 + l2*y2 + l3*y3 + l4*y4 + l5*y5 +
     l6*y6 + l7*y7 + l8*y8 + l9*y9 + l10*y10 +
     l11*y11 + l12*y12 + l13*y13 + l14*y14 + l15*y15
f ~~ 1*f
"

lavaanModel <- lavaan::sem(lavaanSyntax,
                           data = dataset,
                           meanstructure = TRUE,
                           std.lv = TRUE)

# Optional: Plot the model
# semPlot::semPaths(lavaanModel,
#                   what = "est",
#                   fade = FALSE)

regsem <- adaptiveLasso(
  # pass the fitted lavaan model
  lavaanModel = lavaanModel,
  # names of the regularized parameters:
  regularized = paste0("l", 6:15),
  # in case of lasso and adaptive lasso, we can specify the number of lambda
  # values to use. lessSEM will automatically find lambda_max and fit
  # models for nLambda values between 0 and lambda_max. For the other
  # penalty functions, lambdas must be specified explicitly
  nLambdas = 50)

# use the plot-function to plot the regularized parameters:
plot(regsem)

# elements of regsem can be accessed with the @ operator:
regsem@parameters[1,]

# AIC and BIC:
AIC(regsem)
BIC(regsem)

# The best parameters can also be extracted with:
coef(regsem, criterion = "AIC")
coef(regsem, criterion = "BIC")

# 5-fold cross-Validation
# with new weights for each subset
cv <- cv4regularizedSEM(regularizedSEM = regsem,
                          k = 5,
                          reweigh = TRUE)
coef(cv)


#### Advanced ###
# Switching the optimizer #
# Use the "method" argument to switch the optimizer. The control argument
# must also be changed to the corresponding function:
regsemGlmnet <- adaptiveLasso(
  lavaanModel = lavaanModel,
  regularized = paste0("l", 6:15),
  nLambdas = 50,
  method = "glmnet",
  control = controlGlmnet())

# Note: The results are basically identical:
regsemGlmnet@parameters - regsem@parameters
}
