% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpOptimizationInterface.R
\name{gpLsp}
\alias{gpLsp}
\title{gpLsp}
\usage{
gpLsp(
  par,
  fn,
  gr = NULL,
  additionalArguments = list(),
  regularized,
  lambdas,
  thetas,
  control = controlIsta()
)
}
\description{
Implements lsp regularization for general purpose optimization problems.
The penalty function is given by:
\deqn{p( x_j) = \lambda \log(1 + |x_j|\theta)}
where \eqn{\theta > 0}.
}
\details{
The interface is similar to that of optim. Users have to supply a vector 
with starting values (important: This vector _must_ have labels) and a fitting
function. This fitting functions _must_ take exactly 3 arguments:

1. A vector with current parameter estimates
2. A vector with labels of parameters
3. Any additional arguments used by the function contained in a single list
(called additionalArguments below)

The gradient function gr is optional. If set to NULL, the \pkg{numDeriv} package
will be used to approximate the gradients. Supplying a gradient function
can result in considerable speed improvements.  

lsp regularization:

* Candès, E. J., Wakin, M. B., & Boyd, S. P. (2008). Enhancing Sparsity by 
Reweighted l1 Minimization. Journal of Fourier Analysis and Applications, 14(5–6), 
877–905. https://doi.org/10.1007/s00041-008-9045-x
 
For more details on GLMNET, see:

* Friedman, J., Hastie, T., & Tibshirani, R. (2010). 
Regularization Paths for Generalized Linear Models via Coordinate Descent. 
Journal of Statistical Software, 33(1), 1–20. https://doi.org/10.18637/jss.v033.i01
* Yuan, G.-X., Chang, K.-W., Hsieh, C.-J., & Lin, C.-J. (2010).
A Comparison of Optimization Methods and Software for Large-scale 
L1-regularized Linear Classiﬁcation. Journal of Machine Learning Research, 11, 3183–3234.
* Yuan, G.-X., Ho, C.-H., & Lin, C.-J. (2012). 
An improved GLMNET for l1-regularized logistic regression. 
The Journal of Machine Learning Research, 13, 1999–2030. https://doi.org/10.1145/2020408.2020421

For more details on ISTA, see:

* Beck, A., & Teboulle, M. (2009). A Fast Iterative Shrinkage-Thresholding 
Algorithm for Linear Inverse Problems. SIAM Journal on Imaging Sciences, 2(1),
183–202. https://doi.org/10.1137/080716542
* Gong, P., Zhang, C., Lu, Z., Huang, J., & Ye, J. (2013). 
A General Iterative Shrinkage and Thresholding Algorithm for Non-convex 
Regularized Optimization Problems. Proceedings of the 30th International 
Conference on Machine Learning, 28(2)(2), 37–45.
* Parikh, N., & Boyd, S. (2013). Proximal Algorithms. Foundations and 
Trends in Optimization, 1(3), 123–231.
}
