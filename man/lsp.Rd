% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsp.R
\name{lsp}
\alias{lsp}
\title{lsp}
\usage{
lsp(
  lavaanModel,
  regularized,
  lambdas,
  thetas,
  modifyModel = lessSEM::modifyModel(),
  control = controlIsta()
)
}
\arguments{
\item{lavaanModel}{model of class lavaan}

\item{regularized}{vector with names of parameters which are to be regularized.
If you are unsure what these parameters are called, use
getLavaanParameters(model) with your lavaan model object}

\item{lambdas}{numeric vector: values for the tuning parameter lambda}

\item{thetas}{parameters whose absolute value is above this threshold will be penalized with
a constant (theta)}

\item{modifyModel}{used to modify the lavaanModel. See ?modifyModel.}

\item{control}{used to control the optimizer. This element is generated with
the controlIsta (see ?controlIsta)}
}
\description{
This function allows for regularization of models built in lavaan with the
lsp penalty.
The returned object is an S4 class; its elements can be accessed
with the "@" operator (see examples).
}
\details{
For more details, see:
\enumerate{
\item Gong, P., Zhang, C., Lu, Z., Huang, J., & Ye, J. (2013).
A general iterative shrinkage and thresholding algorithm for non-convex
regularized optimization problems. Proceedings of the 30th International
Conference on Machine Learning, 28(2)(2), 37â€“45.
}
}
\examples{
library(lessSEM)

# Identical to regsem, lessSEM builds on the lavaan
# package for model specification. The first step
# therefore is to implement the model in lavaan.
set.seed(123)
dataset <- simulateExampleData()

lavaanSyntax <- "
f =~ l1*y1 + l2*y2 + l3*y3 + l4*y4 + l5*y5 + 
     l6*y6 + l7*y7 + l8*y8 + l9*y9 + l10*y10 + 
     l11*y11 + l12*y12 + l13*y13 + l14*y14 + l15*y15
f ~~ 1*f
"

lavaanModel <- lavaan::sem(lavaanSyntax,
                           data = dataset,
                           meanstructure = TRUE,
                           std.lv = TRUE)

# Optional: Plot the model
# semPlot::semPaths(lavaanModel, 
#                   what = "est",
#                   fade = FALSE)

regsem <- lsp(
  # pass the fitted lavaan model
  lavaanModel = lavaanModel,
  # names of the regularized parameters:
  regularized = paste0("l", 6:15),
  lambdas = seq(0,1,.1),
  thetas = seq(0.1,1,.1), 
  control = controlIsta(convCritInner = 0)) # this convergence criterion
# seems to work better here


# elements of regsem can be accessed with the @ operator:
regsem@parameters[1,]

# AIC and BIC:
AIC(regsem)
BIC(regsem)

# The best parameters can also be extracted with:
coef(regsem, criterion = "AIC")
coef(regsem, criterion = "BIC")

cv <- cv4lsp(regsem, k = 5)
cv@cvfits
}
