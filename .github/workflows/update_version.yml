name: Update Version in DESCRIPTION

on:
  push:
    branches:
      - main

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if branch version_bump already exists
        run: |
          # https://remarkablemark.org/blog/2022/09/25/check-git-branch-exists-in-remote-repository/
          BRANCH='version_bump'
                  
          if (git ls-remote --exit-code --heads origin bump_version); then
            echo "Branch version_bump already exists. Skipping this job. Please merge the existing branch first."
            
          else
            # 2 means that the branch was not found.
            # We create a text file without content. 
            # In the subsequent jobs, we can check if this textfile exists
            touch bump_version.txt
          fi
          FILE=bump_version.txt
          if test -f "$FILE"; then
            echo "$FILE exists."
          fi
          
      - name: Check if last commit was to merge a pull request from bump_version
        run: |
          FILE=bump_version.txt
          if test -f "$FILE"; then
            
            # We now check if the last commit already happens to be a version_bump:
            
            if git log -1 --pretty=format:%s | grep -qE "bump_version"; then
             echo "Last commit did change the version. Skipping update"
             
             # We can just delete the file again and no update will be made:
             rm bump_version.txt
             
            fi
          fi
          
      - name: Get current version number
        id: get-version
        run: |
          FILE=bump_version.txt
          if test -f "$FILE"; then
            current_version=$(grep "Version:" DESCRIPTION | sed 's/Version: \([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)/\1.\2.\3/')
            echo "::set-output name=version::$current_version"
          fi
      - name: Increment version number
        id: increment-version
        run: |
          FILE=bump_version.txt
          if test -f "$FILE"; then
            current_version=${{ steps.get-version.outputs.version }}
            major=$(echo $current_version | cut -d '.' -f 1)
            minor=$(echo $current_version | cut -d '.' -f 2)
            patch=$(echo $current_version | cut -d '.' -f 3)
            new_version="$major.$minor.$((patch+1))"
            echo "::set-output name=new_version::$new_version"
          fi
      - name: Update DESCRIPTION file
        run: |
         FILE=bump_version.txt
          if test -f "$FILE"; then
          sed -i "s/Version:.*$/Version: ${{ steps.increment-version.outputs.new_version }}/g" DESCRIPTION
         fi
       
      - name: Create pull request
        # https://stackoverflow.com/questions/68057744/create-pull-request-with-github-action
        run: |
         FILE=bump_version.txt
          if test -f "$FILE"; then
           git config --local user.email "action@github.com"
           git config --local user.name "GitHub Action"
           # create new branch
           git branch bump_version
           git checkout bump_version
           # Add the changes and commit
           git add DESCRIPTION
           git commit -m "Bump version number in DESCRIPTION"
           git push --set-upstream origin bump_version
           # Request merge
           gh pr create -B main -H bump_version --title 'Bump version' --body 'Created by Github action'
         fi
         
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
