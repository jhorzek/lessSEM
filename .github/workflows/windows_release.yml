name: Windows release

on:
  workflow_dispatch
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} (${{ matrix.r-version }})
    
    strategy:
      matrix:
        r-version: ['release']
        os: ['windows-latest'] # 'macOS-latest' -> add later on; running on macOS is more expensive

    steps:
      - uses: actions/checkout@v2
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}
      - uses: r-lib/actions/setup-pandoc@v1
      - name: Install dependencies
        run: |
          options(install.packages.compile.from.source = "never")
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
        
      - name: Build package
        run: tools:::.build_packages(".")
        shell: Rscript {0}
        
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.ref }}
          release_name: Release ${{ github.ref }} (windows)
          draft: false
          prerelease: false
      - name: Upload release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./lessSEM_*.tar.gz
          asset_name: lessSEM_windows.tar.gz
          asset_content_type: application/zip
          
